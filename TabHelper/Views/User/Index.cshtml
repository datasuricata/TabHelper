@model TabHelper.Models.ViewModel.UserViewModel
@using TabHelper.Models.ViewModel

@{
    ViewData["Title"] = "Gerenciador de Usuários";
}

<div class="col-md-12">
    <div class="panel panel-info drop-shadow">
        <div class="panel-heading">Administração de Usuário</div>
        <div class="panel-body">
            <div class="col-md-9">
                <h3>Controle de acesso</h3>
                <p>Controle o nível de acesso de seus colaboradores.</p>
                <p>Bloqueio de colaboradores que não estão mais em seu ciclo empresarial.</p>
                <p></p>
            </div>
            <div class="col-md-3 text-right">
                <a asp-controller="User" asp-action="Create" class="btn btn-default btn-sm drop-shadow" data-toggle="modal" data-target="#create">Usuário (+)</a>
            </div>
        </div>
    </div>
    @await Html.PartialAsync("../User/List.cshtml", Model)
</div>

<div class="modal" id="create">
    <div class="modal-dialog">
        @await Html.PartialAsync("../User/Create.cshtml", new UserModel())
    </div>
</div>

<div class="modal" id="edit">
    <div class="modal-dialog">
        @await Html.PartialAsync("../User/Edit.cshtml", new UserModel())
    </div>
</div>

<div class="modal" id="block">
    <div class="modal-dialog">
        @await Html.PartialAsync("../User/Block.cshtml", new UserLightModel())
    </div>
</div>

<div class="modal" id="delete">
    <div class="modal-dialog">
        @await Html.PartialAsync("../User/Delete.cshtml", new UserLightModel())
    </div>
</div>

@section scripts{

    <script type="text/javascript">
        $(".modal").on("hidden.bs.modal", function () {
            $(this).data('bs.modal', null);
        });
    </script>

}