// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TabHelper.Data.ORM;

namespace TabHelper.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("core")
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("TabHelper.Models.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<DateTimeOffset?>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("TabHelper.Models.Entities.Forms", b =>
                {
                    b.Property<int>("TabulationId");

                    b.Property<int>("TabulationAttributesId");

                    b.Property<DateTimeOffset?>("CreatedAt");

                    b.Property<int>("Id");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset?>("UpdatedAt");

                    b.HasKey("TabulationId", "TabulationAttributesId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("TabulationAttributesId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("TabHelper.Models.Entities.Historic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("CreatedAt");

                    b.Property<string>("FormJson");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("TabulationId");

                    b.Property<DateTimeOffset?>("UpdatedAt");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Historics");
                });

            modelBuilder.Entity("TabHelper.Models.Entities.Tabulation", b =>
                {
                    b.Property<int>("Id");

                    b.Property<DateTimeOffset?>("CreatedAt");

                    b.Property<string>("DepartmentId");

                    b.Property<int?>("DepartmentId1");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Observation");

                    b.Property<DateTimeOffset?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId1");

                    b.ToTable("Tabulations");
                });

            modelBuilder.Entity("TabHelper.Models.Entities.TabulationAttributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ComponentType");

                    b.Property<DateTimeOffset?>("CreatedAt");

                    b.Property<string>("Detail");

                    b.Property<string>("Info");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<int>("Order");

                    b.Property<string>("Title");

                    b.Property<DateTimeOffset?>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("TabulationAttributes");
                });

            modelBuilder.Entity("TabHelper.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("CreatedAt");

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("Email");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<DateTimeOffset?>("UpdatedAt");

                    b.Property<int>("UserAccess");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TabHelper.Models.Entities.Forms", b =>
                {
                    b.HasOne("TabHelper.Models.Entities.TabulationAttributes", "TabulationAttributes")
                        .WithMany("Forms")
                        .HasForeignKey("TabulationAttributesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TabHelper.Models.Entities.Tabulation", "Tabulation")
                        .WithMany("Forms")
                        .HasForeignKey("TabulationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TabHelper.Models.Entities.Tabulation", b =>
                {
                    b.HasOne("TabHelper.Models.Entities.Department")
                        .WithMany("Tabs")
                        .HasForeignKey("DepartmentId1");

                    b.HasOne("TabHelper.Models.Entities.Department", "Department")
                        .WithOne()
                        .HasForeignKey("TabHelper.Models.Entities.Tabulation", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TabHelper.Models.Entities.User", b =>
                {
                    b.HasOne("TabHelper.Models.Entities.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");
                });
#pragma warning restore 612, 618
        }
    }
}
